import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class Solution{
    static int T, N;
    static int room[][];
    static int roomnumber, maxcount;
    static int count, maxroomnumber;
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
		T=sc.nextInt();
		
		for(int test_case=1;test_case<=T;test_case++) {
			
			N=sc.nextInt();
			room=new int[N][N];
			maxcount=0;
			roomnumber=0;
			
			for(int i=0;i<N;i++) {
				for(int j=0;j<N;j++)
					room[i][j]=sc.nextInt();
			}
			
			for(int i=0;i<N;i++) {
				for(int j=0;j<N;j++) {
                    count = 1;
                    roomnumber = room[i][j];
					max(i,j,room[i][j]);
				}
			}		
			System.out.println("#"+test_case+" "+maxroomnumber+" "+maxcount);
		}
    }
    public static void max(int i, int j, int number){
        if(i-1>=0){
       	 if(room[i-1][j] == room[i][j]+1){
            max(i-1,j,number+1);
            count++;
        }}
        if(j+1<=N-1){
       	 if(room[i][j+1] == room[i][j]+1){
            max(i,j+1,number+1);
            count++;
        }}
        if(i+1<=N-1){
       	 if(room[i+1][j] == room[i][j]+1){
            max(i+1,j,number+1);
            count++;
        }}
        if(j-1>=0){
       	 if(room[i][j-1] == room[i][j]+1){
            max(i,j-1,number+1);
            count++;
        }}
        if(maxcount < count){
            maxcount = count;
            maxroomnumber= roomnumber;
        }
        if(maxcount==count && roomnumber<maxroomnumber){
           maxroomnumber=roomnumber;
        }
    }
}
