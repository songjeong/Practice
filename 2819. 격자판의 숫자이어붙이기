import java.util.*;
import java.io.*;

public class Solution{
    static int[][] matrix;
    static int test_case;
    static HashMap<String,Integer> map;
   public static void dfs(int x, int y, String num){
       if(num.length()==7){
          map.put(num,1);
          return;
       }
       if(y<3){
       	dfs(x,y+1,num+Integer.toString(matrix[x][y+1]));
       }
        if(y>0){
       	dfs(x,y-1,num+Integer.toString(matrix[x][y-1]));
       }
       if(x<3){
       	dfs(x+1,y,num+Integer.toString(matrix[x+1][y]));
       }
        if(x>0){
       	dfs(x-1,y,num+Integer.toString(matrix[x-1][y]));
       }

   }
   public static void main(String[] args){
       Scanner sc = new Scanner(System.in);
       test_case = sc.nextInt();
       for(int t= 1; t<test_case+1; t++){
       matrix = new int[4][4];
       map = new HashMap<String,Integer>();
       for(int i =0; i<4; i++){
           for(int j = 0; j<4; j++)
           {
               int temp=sc.nextInt();
			   matrix[i][j]=temp;
           }
       }
       for(int i=0;i<4;i++){
			for(int j=0;j<4;j++)
            {
                String num = Integer.toString(matrix[i][j]);
				dfs(i,j,num);
            }
       }
       System.out.println("#"+t+" "+map.size());
       map.clear();
   }
   }
}
